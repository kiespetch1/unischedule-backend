name: Release

on:
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy of release ${{ github.event.release.tag_name }} started
        run: echo Deploy of release ${{ github.event.release.tag_name }} started

      - name: Checkout backend repo
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Identity image
        run: |
          docker build -t ghcr.io/kiespetch1/identity:${{ github.event.release.tag_name }} -f identity/Dockerfile .
          docker push ghcr.io/kiespetch1/identity:${{ github.event.release.tag_name }}

      - name: Build and push Schedule image
        run: |
          docker build -t ghcr.io/kiespetch1/schedule:${{ github.event.release.tag_name }} -f schedule/Dockerfile .
          docker push ghcr.io/kiespetch1/schedule:${{ github.event.release.tag_name }}

      - name: Clone frontend repo
        run: |
          git clone --branch ${{ github.event.release.tag_name }} --depth 1 https://github.com/kiespetch1/unischedule-frontend.git frontend

      - name: Build and push frontend Docker image
        working-directory: frontend
        run: |
          docker build -t ghcr.io/kiespetch/frontend:${{ github.event.release.tag_name }} -f Dockerfile .
          docker push ghcr.io/kiespetch/frontend:${{ github.event.release.tag_name }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: | 
            cd unischedule
            export IDENTITY_CONNECTION_STRING="${{ secrets.IDENTITY_CONNECTION_STRING }}"
            export SCHEDULE_CONNECTION_STRING="${{ secrets.SCHEDULE_CONNECTION_STRING }}"
            export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
            export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
            export EMAIL="${{ secrets.EMAIL }}"
            export CURRENT_DOMAIN="${{ secrets.CURRENT_DOMAIN }}"
            docker compose pull
            docker compose up -d
