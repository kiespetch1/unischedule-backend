services:
  prometheus:
    image: prom/prometheus:v3.4.0
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=30d"
      - "--storage.tsdb.retention.size=5GB"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${CURRENT_DOMAIN}`)"
      - "traefik.http.routers.prometheus.entrypoints=https"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=unischedule-staging_shared-network"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - monitoring
      - shared-network

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - monitoring
      - shared-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${CURRENT_DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=unischedule-staging_shared-network"
  
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./grafana/loki/loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
      - loki_wal:/wal
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -validation.allow-structured-metadata=false
    networks:
      - monitoring

  promtail:
    image: "grafana/promtail:latest"
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - ./grafana/promtail/promtail-config.yaml:/etc/promtail/config.yaml:ro
      - promtail_positions:/tmp/positions
      - app-logs:/app/logs:ro
    networks:
      - monitoring
    command: -config.file=/etc/promtail/config.yaml

networks:
  shared-network:
    external: true
    name: unischedule-staging_shared-network
  monitoring:
    driver: bridge
    external: true
    name: unischedule-staging_monitoring

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  loki_wal:
  promtail_positions:
